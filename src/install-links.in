#!/usr/bin/env python
import glob
import os
import sys


prefix = sys.argv[1]
if not prefix:
    prefix = os.path.expanduser("${install-links:prefix}")
buildout = "${buildout:directory}"
bindir = os.path.join(prefix, 'bin')


if not os.path.exists(bindir):
    os.makedirs(bindir)


files = []
files.extend(glob.glob(os.path.join(buildout, 'bin', 'virtualenv-*')))
files.extend(glob.glob(os.path.join(buildout, 'python-*', 'bin', 'python[23].*')))
files.extend(glob.glob(os.path.join(buildout, 'python-*', 'bin', 'easy_install-*')))
files.extend(glob.glob(os.path.join(buildout, 'python-*', 'bin', 'pip*.*')))
files.extend(glob.glob(os.path.join(buildout, 'parts', 'opt', 'bin', 'pyvenv-*')))
files.sort()
links = [(x, os.path.basename(x)) for x in files]
links.append((os.path.join(buildout, 'pypy', 'bin', 'pypy'), 'pypy'))
links.append((os.path.join(buildout, 'pypy', 'bin', 'easy_install'), 'easy_install-pypy'))
links.append((os.path.join(buildout, 'pypy', 'bin', 'pip'), 'pip-pypy'))
links.append((os.path.join(buildout, 'pypy3', 'bin', 'pypy'), 'pypy3'))
links.append((os.path.join(buildout, 'pypy3', 'bin', 'easy_install'), 'easy_install-pypy3'))
links.append((os.path.join(buildout, 'pypy3', 'bin', 'pip'), 'pip-pypy3'))
for src, name in links:
    if not os.path.exists(src):
        continue
    dst = os.path.join(bindir, name)
    if os.path.lexists(dst):
        if os.path.islink(dst):
            if os.readlink(dst) == src:
                print "No change needed for symlink to '%s' at '%s'." % (src, dst)
                continue
            else:
                print "Replacing symlink at '%s' pointing to '%s' with symlink to '%s'" % (dst, os.readlink(dst), src)
                os.unlink(dst)
        else:
            print "Won't replace regular file '%s' with symlink to '%s'" % (dst, src)
            continue
    os.symlink(src, dst)
    print "Created symlink to '%s' at '%s'." % (src, dst)
